pipeline {
  environment {
    registry = ""
    registryCredential = ""
    dockerImage = ''
    dockerHost=""
    containerName = ""
    apiUrl= ""
    apiPort=
    gitCredential="<JENKINS_GIT_CREDENTIAL>"
  }
  agent any
  stages {
    stage('Cloning Git') {
      steps {
        git url: 'https://github.com/SelecaoGlobocom/victor-muchiaroni', 
        credentialsId: gitCredential
      }
    }
    stage('Building image') {
      steps{
        script {
        withDockerServer([uri: "${dockerHost}"]) {

         dockerImage = docker.build registry + ":$BUILD_NUMBER"
        }
        }
      }
    }
    stage('Push Image') {
      steps{
        script {
            withDockerServer([uri: "${dockerHost}"]) {
            docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
            }
          }
        }
      }
    }

    stage('Stopping old application versions') {
      steps{
         script{
            sh "docker -H ${dockerHost} stop ${containerName} || true"

            }
          }
         }
    stage('Deploy docker image') {
      steps{
         script{
            docker.withServer("${dockerHost}"){
            dockerImage.run('-p 8000:8000 -e GRAPHITE_SERVER=${graphiteServer} --rm --name ' + containerName) 
            
         }
      }
   }
  }
    stage('Smoke test') {
      steps{
         script{
            sh "sleep 30; curl ${apiUrl}:${apiPort}"
        }       
      }
   }
  }
}